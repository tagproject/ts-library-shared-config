{
  "root": true,
  "env": {
    "node": true,
    "commonjs": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "tsconfigRootDir": "."
  },
  "extends": [
    "eslint:recommended",
    "plugin:node/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:promise/recommended",
    "plugin:jest/recommended",
    "prettier"
  ],
  "plugins": ["@typescript-eslint", "optimize-regex", "jest"],
  "ignorePatterns": ["*.cjs", "*.js", "bin/*"],
  "rules": {
    "@typescript-eslint/brace-style": ["error", "1tbs"],
    "@typescript-eslint/explicit-function-return-type": ["error", { "allowExpressions": true }],
    "@typescript-eslint/func-call-spacing": ["error", "never"],
    "@typescript-eslint/indent": ["error", 2, { "SwitchCase": 1, "ImportDeclaration": 2 }],
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/member-delimiter-style": ["error", { "multiline": { "delimiter": "semi" } }],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "classes": {
          "memberTypes": [
            // Index signature
            "signature",
            // Fields
            "public-static-field",
            "protected-static-field",
            "private-static-field",
            "public-decorated-field",
            "protected-decorated-field",
            "private-decorated-field",
            "public-instance-field",
            "protected-instance-field",
            "private-instance-field",
            "public-abstract-field",
            "protected-abstract-field",
            "private-abstract-field",
            "public-field",
            "protected-field",
            "private-field",
            "static-field",
            "instance-field",
            "abstract-field",
            "decorated-field",
            "field",
            // Constructors
            "public-constructor",
            "protected-constructor",
            "private-constructor",
            "constructor",
            // Methods
            "public-static-method",
            "protected-static-method",
            "private-static-method",
            "public-decorated-method",
            "protected-decorated-method",
            "private-decorated-method",
            "public-instance-method",
            "protected-instance-method",
            "private-instance-method",
            "public-abstract-method",
            "protected-abstract-method",
            "private-abstract-method",
            "public-method",
            "protected-method",
            "private-method",
            "static-method",
            "instance-method",
            "abstract-method",
            "decorated-method",
            "method"
          ],
          "order": "alphabetically"
        },
        "default": {
          "memberTypes": [
            // Index signature
            "signature",
            // Fields
            "public-static-field",
            "protected-static-field",
            "private-static-field",
            "public-decorated-field",
            "protected-decorated-field",
            "private-decorated-field",
            "public-instance-field",
            "protected-instance-field",
            "private-instance-field",
            "public-abstract-field",
            "protected-abstract-field",
            "private-abstract-field",
            "public-field",
            "protected-field",
            "private-field",
            "static-field",
            "instance-field",
            "abstract-field",
            "decorated-field",
            "field",
            // Constructors
            "public-constructor",
            "protected-constructor",
            "private-constructor",
            "constructor",
            // Getters
            "public-static-get",
            "protected-static-get",
            "private-static-get",
            "public-decorated-get",
            "protected-decorated-get",
            "private-decorated-get",
            "public-instance-get",
            "protected-instance-get",
            "private-instance-get",
            "public-abstract-get",
            "protected-abstract-get",
            "private-abstract-get",
            "public-get",
            "protected-get",
            "private-get",
            "static-get",
            "instance-get",
            "abstract-get",
            "decorated-get",
            "get",
            // Setters
            "public-static-set",
            "protected-static-set",
            "private-static-set",
            "public-decorated-set",
            "protected-decorated-set",
            "private-decorated-set",
            "public-instance-set",
            "protected-instance-set",
            "private-instance-set",
            "public-abstract-set",
            "protected-abstract-set",
            "private-abstract-set",
            "public-set",
            "protected-set",
            "private-set",
            "static-set",
            "instance-set",
            "abstract-set",
            "decorated-set",
            "set",
            // Methods
            "public-static-method",
            "protected-static-method",
            "private-static-method",
            "public-decorated-method",
            "protected-decorated-method",
            "private-decorated-method",
            "public-instance-method",
            "protected-instance-method",
            "private-instance-method",
            "public-abstract-method",
            "protected-abstract-method",
            "private-abstract-method",
            "public-method",
            "protected-method",
            "private-method",
            "static-method",
            "instance-method",
            "abstract-method",
            "decorated-method",
            "method"
          ],
          "order": "alphabetically"
        }
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      { "selector": "interface", "format": ["PascalCase"], "custom": { "regex": "^I[A-Z]", "match": true } }
    ],
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/no-magic-numbers": [
      "error",
      {
        "ignoreNumericLiteralTypes": true,
        "ignoreEnums": true,
        "enforceConst": true,
        "ignoreReadonlyClassProperties": true,
        "ignoreArrayIndexes": true,
        "ignoreDefaultValues": true,
        "ignore": [0, 1, 2, 8, 10, 16]
      }
    ],
    "@typescript-eslint/no-parameter-properties": "error",
    "@typescript-eslint/no-shadow": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "warn",
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_$" }],
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/prefer-for-of": "warn",
    "@typescript-eslint/prefer-function-type": "warn",
    "@typescript-eslint/prefer-readonly": "warn",
    "@typescript-eslint/semi": ["error"],
    "@typescript-eslint/unbound-method": "off",
    "array-bracket-newline": ["error", "consistent"],
    "arrow-body-style": ["error", "as-needed"],
    "arrow-parens": ["error", "as-needed"],
    "arrow-spacing": "error",
    "block-scoped-var": "error",
    "curly": ["error", "multi-line"],
    "eol-last": "error",
    "eqeqeq": "error",
    "generator-star-spacing": ["error", "after"],
    "import/extensions": "off",
    "import/prefer-default-export": "off",
    "indent": "off",
    "key-spacing": "error",
    "keyword-spacing": "error",
    "lines-between-class-members": "off",
    "max-classes-per-file": ["error", 1],
    "max-len": ["error", { "code": 120, "ignoreComments": true, "ignoreRegExpLiterals": true }],
    "max-lines-per-function": ["error", { "max": 40 }],
    "new-parens": "error",
    "no-alert": "warn",
    "no-bitwise": "off",
    "no-confusing-arrow": ["error", { "allowParens": true, "onlyOneSimpleParam": true }],
    "no-console": "warn",
    "no-dupe-class-members": "off",
    "no-else-return": ["error", { "allowElseIf": false }],
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-magic-numbers": "off",
    "no-multi-spaces": "error",
    "no-multiple-empty-lines": "error",
    "no-nested-ternary": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-wrappers": "error",
    "no-plusplus": "off",
    "no-return-await": "error",
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-shadow": "off",
    "no-tabs": "error",
    "no-template-curly-in-string": "error",
    "no-throw-literal": "error",
    "no-trailing-spaces": "error",
    "no-underscore-dangle": "off",
    "no-unneeded-ternary": "error",
    "no-unused-expressions": "error",
    "no-useless-call": "error",
    "no-useless-computed-key": "error",
    "no-useless-concat": "error",
    "no-useless-rename": "error",
    "no-useless-return": "error",
    "no-var": "error",
    "no-whitespace-before-property": "error",
    "node/no-empty-function": "off",
    "node/no-missing-import": "off",
    "node/no-missing-require": "off",
    "node/no-unsupported-features/es-syntax": "off",
    "node/shebang": "off",
    "object-curly-newline": "error",
    "object-curly-spacing": ["error", "always"],
    "object-shorthand": ["error", "always"],
    "optimize-regex/optimize-regex": "warn",
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "return" },
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      { "blankLine": "any", "prev": ["const", "let", "var"], "next": ["const", "let", "var"] },
      { "blankLine": "always", "prev": "*", "next": "if" },
      { "blankLine": "any", "prev": "if", "next": "if" },
      { "blankLine": "always", "prev": "directive", "next": "*" },
      { "blankLine": "any", "prev": "directive", "next": "directive" }
    ],
    "prefer-arrow-callback": "error",
    "prefer-const": "error",
    "prefer-destructuring": "error",
    "prefer-promise-reject-errors": "error",
    "promise/prefer-await-to-then": "error",
    "quotes": ["warn", "single", { "avoidEscape": true }],
    "radix": "error",
    "require-atomic-updates": "off",
    "require-await": "error",
    "rest-spread-spacing": ["error", "never"],
    "semi": "off",
    "semi-spacing": "error",
    "space-before-blocks": "error",
    "space-before-function-paren": ["error", { "anonymous": "always", "named": "never", "asyncArrow": "always" }],
    "space-in-parens": "error",
    "space-infix-ops": "error",
    "space-unary-ops": "error",
    "spaced-comment": ["error", "always"],
    "switch-colon-spacing": "error",
    "template-curly-spacing": "error"
  },
  "overrides": [
    {
      "files": ["*.test.ts", "*.mock.ts"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-magic-numbers": "off",
        "max-lines-per-function": ["error", { "max": 200 }],
        "no-underscore-dangle": "off"
      }
    }
  ],
  "settings": {
    "import/resolver": {
      "node": {
        "paths": ["src"],
        "extensions": [".ts", ".d.ts"]
      }
    }
  }
}
